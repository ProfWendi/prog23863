Session 1.1

1. 
it's object oriented
it's a full programming language with control structures
it's strictly typed and strongly typed 
it has a c++-like syntax
it's platform independent or portable
it's a compiled language that is interpreted (hybrid)
it's robust
it's small and compact

2. Java SE (standard edition for standard or basic desktop apps), 
Java EE (Enterprise Edition for multi-tier client-server apps), 
Java ME (Micro edition for mobile and connected devices).  
We're using SE.

3. JDK - Java Development Kit and JRE - Java Runtime Environment

4. JDK contains the tools needed to create and build Java programs 
e.g. the compiler and debugger

5. JRE contains the JFC (Java Foundation Classes - the building blocks 
used to build Java programs) and the JVM (Java Virtual Machine - used to 
run Java programs.

6. Java virtual machine - contains the interpreter - you need this if 
you want to be able to run a Java application 

7.  Not necessarily.  Some languages might be better at specific things 
and not good for other things.  Every language has strengths and 
weaknesses.

8. Java, Python, and JavaScript are all high-level languages.

9. Python is an interpreted language: each source code statement is 
interpreted into machine code and executed.

10. JavaScript is also an interpreted language (usually the interpreter is 
run in the user's browser)

11. Java is a hybrid language: it is first compiled into bytecode and 
then that bytecode is interpreted into machine code line-by-line.

12. source code is the code you type into your editor as plain text
java source files have the .java extension

13. Bytecode is what you get after a successful compile of java source 
code - it's not plain text source but it's not machine code either
(kind of in between)
java bytecode has a .class extension

14. It creates the class header and container for the class/program
called Foobar.
The source file would be Foobar.java 
The bytecode would be Foobar.class

15. Upper- and lower-case are not the same. For example, a variable 
"num" is not the same as the variable "Num".  Similarly, the keyword 
"int" is a valid java keyword but "Int" is not.

16. This is the main() method header - the container for the main() method.
It is the starting point for a Java program.

17. The system's default output device; out is an object that belongs to 
the System class.

18. It takes an argument and prints it on the screen, then adds a newline 
to the end of the output.

Practice Exercises:

1. (inside the main() method, between it's open and closing braces)
public class ExerciseOne {
    public static void main(String[] args) {
	    System.out.println("I am an amazing person!");
    }
}

2. 
public class ProduceCalculator {
    public static void main(String[] args) {
	
		String fruit = "nectarines";
		int numFruit = 25;
		double fruitCost = .49;
		double totalCost = numFruit * fruitCost;
		System.out.println("$" + fruitCost + " for " + numFruit 
		            + " " + fruit + ".");
		// OR
		System.out.printf("$%.2f for %d %s.\n", totalCost, 
		        numFruit, fruit);
	}
}